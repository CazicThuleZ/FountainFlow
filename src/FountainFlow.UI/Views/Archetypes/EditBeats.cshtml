@using FountainFlowUI.Models
@model EditBeatsViewModel

@{
    ViewBag.Title = $"Edit Beats - {Model.Domain}";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-8">
        <h1>Edit Story Structure</h1>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Home</a></li>
                <li class="breadcrumb-item"><a asp-controller="Archetypes" asp-action="Archetypes">Archetypes</a></li>
                <li class="breadcrumb-item active" aria-current="page">@Model.Domain - Edit Structure</li>
            </ol>
        </nav>
    </div>
    <div class="col-lg-4">
        <div class="title-action">
            <button class="btn btn-secondary" type="button" id="saveChangesBtn" disabled>
                <i class="fa fa-save"></i> Save Changes
            </button>
        </div>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">

    <div class="row">
        <div class="row h-100">
            <div class="col-lg-2">
                <div class="ibox h-100">
                    <div class="ibox-title">
                        <h5>Archetype Details</h5>
                    </div>
                    <div class="ibox-content">
                        <div class="text-center mb-3">
                            <img src="@Url.Content($"~/Images/{Model.Icon}")" alt="@Model.Domain"
                                class="rounded-circle img-fluid" style="max-width: 80px; max-height: 80px;">
                        </div>
                        <div class="form-group">
                            <label class="font-bold">Domain</label>
                            <p class="form-control-static">@Model.Domain</p>
                        </div>
                        <div class="form-group mt-2">
                            <label class="font-bold">Architect</label>
                            <p class="form-control-static">@Model.Architect</p>
                        </div>
                        <div class="form-group mt-2">
                            <label class="font-bold">Description</label>
                            <p class="form-control-static small">@Model.Description</p>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-10">
                <div class="ibox h-100">
                    <div class="ibox-title d-flex justify-content-between align-items-center">
                        <h5 id="beatDetailsTitle" class="mb-0">Beat Details</h5>
                        <span id="sequenceBadge" class="badge bg-primary rounded-pill d-none">
                            Sequence: <span id="beatSequence"></span>
                        </span>
                    </div>
                    <div class="ibox-content">
                        <div id="beatDetails" class="d-none">
                            <div class="form-group">
                                <label class="font-bold">Description</label>
                                <textarea id="beatDescription" class="form-control" rows="3"></textarea>
                            </div>
                            <div class="form-group mt-3">
                                <label class="font-bold">Percent of Story</label>
                                <input type="number" id="beatPercent" class="form-control" min="0" max="100">
                            </div>
                        </div>
                        <div id="noBeatSelected" class="text-center text-muted py-5">
                            Select a beat to view and edit details
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Bottom Panel - Beats List -->
    <div class="row mt-4">
        <div class="col-lg-12">
            <div class="ibox">
                <div class="ibox-title d-flex justify-content-between align-items-center">
                    <h5>Story Beats</h5>
                    <button class="btn btn-primary" type="button" id="addBeatBtn">
                        <i class="fa fa-plus"></i> Add Beat
                    </button>
                </div>
                <div class="ibox-content">
                    <div class="beats-container">
                        <div class="dd" id="beats-list">
                            <ol class="dd-list">
                                @foreach (var beat in Model.Beats.OrderBy(b => b.Sequence))
                                {
                                    <li class="dd-item" data-id="@beat.Id">
                                        <div class="dd-handle">
                                            <i class="fas fa-grip-vertical"></i>
                                        </div>
                                        <div class="dd-content d-flex justify-content-between align-items-center">
                                            <div class="beat-name">@beat.Name</div>
                                            <button class="btn btn-danger btn-xs delete-beat" data-beat-id="@beat.Id"
                                                onclick="event.stopPropagation();">
                                                <i class="fa fa-trash"></i>
                                            </button>
                                        </div>
                                    </li>
                                }
                            </ol>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="~/css/beats-editor.css" />
}

@section Scripts {
    <script src="~/js/utils.js"></script>
    <script type="module">
        import '/js/beats-editor/index.js';

        // Make archetypeId available globally
        window.archetypeId = '@Model.ArchetypeId';

        $(document).ready(function () {
            // Initialize the beat editor
            BeatEditor.initialize(@Json.Serialize(Model.Beats));

            $('#addBeatBtn').click(function () {
                BeatEditor.addBeat();
            });

            $('#saveChangesBtn').click(async function () {
                if (!BeatEditor.hasUnsavedChanges()) return;

                try {
                    const saveButton = $(this);
                    BeatEditor.setDirty(false);
                    saveButton.prop('disabled', true)
                        .html('<i class="fas fa-spinner fa-spin me-1"></i> Saving...');

                    const response = await $.ajax({
                        url: '@Url.Action("SaveBeats", "Archetypes")',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify(BeatEditor.getChanges())
                    });

                    if (response.success) {
                        showToast('Success', 'Changes saved successfully', 'success');
                    } else {
                        showToast('Error', response.message || 'Failed to save changes', 'error');
                    }
                } catch (error) {
                    console.error('Save error:', error);
                    showToast('Error', 'Failed to save changes', 'error');
                } finally {
                    const saveButton = $('#saveChangesBtn');
                    saveButton.prop('disabled', false)
                        .html('<i class="fa fa-save"></i> Save Changes');
                }
            });

            // Handle page navigation protection
            window.addEventListener('beforeunload', function (e) {
                if (BeatEditor.hasUnsavedChanges()) {
                    e.preventDefault();
                    e.returnValue = '';
                }
            });

            // Handle navigation within the site
            $(document).on('click', 'a', function (e) {
                if (BeatEditor.hasUnsavedChanges()) {
                    e.preventDefault();
                    const href = $(this).attr('href');

                    Swal.fire({
                        title: 'Unsaved Changes',
                        text: 'You have unsaved changes. Are you sure you want to leave?',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Leave',
                        cancelButtonText: 'Stay'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.href = href;
                        }
                    });
                }
            });
        });
    </script>
}