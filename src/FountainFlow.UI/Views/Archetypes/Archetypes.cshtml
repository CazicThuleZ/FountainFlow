@using FountainFlowUI.Models
@{
    ViewBag.Title = "Story Archetypes";
}
@model ArchetypeViewModel

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-8">
        <h1>Story Archetypes</h1>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/" aria-label="Return to home">Home</a></li>
                <li class="breadcrumb-item active" aria-current="page">Archetypes</li>
            </ol>
        </nav>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <!-- Archetype List Section -->
        <div class="col-12 col-md-5 col-lg-4">
            <div class="ibox">
                <div class="ibox-content">
                    <form class="mb-4" role="search" aria-label="Filter archetypes">
                        <div class="input-group">
                            <input type="text" class="form-control" placeholder="Filter archetypes"
                                aria-label="Search input">
                            <div class="input-group-append">
                                <button type="button" class="btn btn-primary">
                                    <i class="fa fa-search" aria-hidden="true"></i>
                                    <span>Filter</span>
                                </button>
                            </div>
                        </div>
                    </form>

                    <div class="table-responsive">
                        <table class="table table-hover" aria-label="Archetype list">
                            <thead>
                                <tr>
                                    <th scope="col"> </th>
                                    <th scope="col">Domain</th>
                                    <th scope="col">Architect</th>
                                    <th scope="col">Rank</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var archetype in Model.Archetypes)
                                {
                                    <tr class="clickable-row" data-id="@archetype.Id" style="cursor: pointer;">
                                        <td>
                                            <img src="@Url.Content($"~/Images/{@archetype.Icon}")" alt="@archetype.Domain"
                                                class="rounded-circle" width="48" height="48">
                                        </td>
                                        <td>@archetype.Domain</td>
                                        <td>@archetype.Architect</td>
                                        <td><span class="badge bg-primary">Active</span></td>
                                        <td class="text-end">
                                            <button class="btn btn-link text-danger delete-archetype"
                                                data-id="@archetype.Id" data-name="@archetype.Domain"
                                                onclick="event.stopPropagation();" title="Delete @archetype.Domain">
                                                <i class="fas fa-trash-alt"></i>
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <div class="mt-3 d-flex justify-content-center gap-2">
                        <button title="Add new archetype" class="btn btn-primary btn-sm">
                            <i class="fas fa-plus"></i> <span class="bold">Add New Archetype</span>
                        </button>
                        <button title="Export archetypes" class="btn btn-primary btn-sm">
                            <i class="fas fa-file-export"></i> <span class="bold">Export Archetype</span>
                        </button>
                        <button title="Import archetypes" class="btn btn-primary btn-sm">
                            <i class="fas fa-file-import"></i> <span class="bold">Import Archetype</span>
                        </button>
                    </div>
                    
                </div>
            </div>
        </div>

        <!-- Detail Section -->
        <div class="col-12 col-md-7 col-lg-8">
            <div id="details-container">

                <!-- Details will be loaded here asynchronously -->

            </div>

        </div>
    </div>


    @section Scripts {
        <script>
            // Initialize tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl)
            })
        </script>
        <script>
            $(document).ready(function () {
                console.log('Document ready');
                var getArchetypeDetailsUrl = '@Url.Action("GetArchetypeDetails", "Archetypes")';
                var deleteArchetypeUrl = '@Url.Action("DeleteArchetype", "Archetypes")';

                // Function to load archetype details
                function loadArchetypeDetails(archetypeId) {
                    // Store the currently active tab ID before loading new content
                    var activeTabId = $('.nav-link.active').attr('id');

                    $('#details-container').html('<div class="text-center"><i class="fa fa-spinner fa-spin"></i> Loading...</div>');

                    $.ajax({
                        url: getArchetypeDetailsUrl,
                        data: { id: archetypeId },
                        method: 'GET',
                        success: function (data) {
                            console.log('Success response:', data);
                            $('#details-container').html(data);

                            // Update visual selection state for rows
                            $('.clickable-row').removeClass('table-active');
                            $('.clickable-row[data-id="' + archetypeId + '"]').addClass('table-active');

                            // If we were on the genre tab, switch back to it
                            if (activeTabId === 'genre-tab') {
                                // Need to wait for Bootstrap to initialize the new tab elements
                                setTimeout(function () {
                                    $('#genre-tab').tab('show');
                                }, 0);
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error('Error details:', {
                                status: status,
                                error: error,
                                response: xhr.responseText
                            });
                            $('#details-container').html(`<div class="alert alert-danger">
                                        Error loading details: ${status} - ${error}
                                    </div>`);
                        }
                    });
                }

                $('.delete-archetype').on('click', function (e) {
                    e.preventDefault();
                    e.stopPropagation(); // Prevent row click from triggering

                    const button = $(this);
                    const archetypeId = button.data('id');
                    const archetypeName = button.data('name');

                    Swal.fire({
                        title: 'Are you sure?',
                        text: `You are about to delete the archetype "${archetypeName}". This action cannot be undone.`,
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#d33',
                        cancelButtonColor: '#3085d6',
                        confirmButtonText: 'Yes, delete it!',
                        cancelButtonText: 'Cancel'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            // Show loading state
                            Swal.fire({
                                title: 'Deleting...',
                                text: 'Please wait while we delete the archetype.',
                                allowOutsideClick: false,
                                showConfirmButton: false,
                                didOpen: () => {
                                    Swal.showLoading();
                                }
                            });

                            // Perform delete
                            $.ajax({
                                url: deleteArchetypeUrl + '?id=' + archetypeId,
                                method: 'DELETE',
                                success: function () {
                                    // Remove the row with animation
                                    button.closest('tr').fadeOut(400, function () {
                                        $(this).remove();

                                        // If this was the selected row, load first available archetype
                                        if ($(this).hasClass('table-active')) {
                                            const firstRow = $('.clickable-row').first();
                                            if (firstRow.length > 0) {
                                                loadArchetypeDetails(firstRow.data('id'));
                                            } else {
                                                // No more archetypes, clear details
                                                $('#details-container').html('<div class="alert alert-info">No archetypes available.</div>');
                                            }
                                        }

                                        // Show success message
                                        Swal.fire({
                                            title: 'Deleted!',
                                            text: `The archetype "${archetypeName}" has been deleted.`,
                                            icon: 'success',
                                            confirmButtonColor: '#3085d6'
                                        });
                                    });
                                },
                                error: function (xhr, status, error) {
                                    // Show error message
                                    Swal.fire({
                                        title: 'Error!',
                                        text: 'Failed to delete archetype: ' + (xhr.responseText || error),
                                        icon: 'error',
                                        confirmButtonColor: '#3085d6'
                                    });
                                    console.error('Delete error:', xhr.status, error);
                                }
                            });
                        }
                    });
                });

                // Click handler for rows
                $('.clickable-row').on('click', function () {
                    console.log('Row clicked');
                    var archetypeId = $(this).data('id');
                    console.log('Archetype ID:', archetypeId);
                    loadArchetypeDetails(archetypeId);
                });

                // Automatically load the first archetype's details
                var firstRow = $('.clickable-row').first();
                if (firstRow.length > 0) {
                    loadArchetypeDetails(firstRow.data('id'));
                }
            });
        </script>
    }